<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.Order_DetailMapper">
  <resultMap id="BaseResultMap" type="pojo.Order_Detail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderId" jdbcType="INTEGER" property="orderId" />
    <result column="productId" jdbcType="INTEGER" property="productId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="cost" jdbcType="REAL" property="cost" />
    <association property="product" javaType="pojo.Product">
      <id column="product_id" property="id"/>
      <result column="product_name" property="name"/>
      <result column="product_price" property="price"/>
      <result column="product_fileName" property="fileName"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, orderId, productId, quantity, cost
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from easybuy_order_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from easybuy_order_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pojo.Order_Detail">
    insert into easybuy_order_detail (id, orderId, productId, 
      quantity, cost)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{cost,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="pojo.Order_Detail">
    insert into easybuy_order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        orderId,
      </if>
      <if test="productId != null">
        productId,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="cost != null">
        cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Order_Detail">
    update easybuy_order_detail
    <set>
      <if test="orderId != null">
        orderId = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        productId = #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Order_Detail">
    update easybuy_order_detail
    set orderId = #{orderId,jdbcType=INTEGER},
      productId = #{productId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      cost = #{cost,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据订单ID查询该订单下的所有购买的商品的详细信息-->
  <select id="selectDetailByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT detail.id,orderId,quantity,productId,cost,product.name as product_name,product.price as product_price,product.fileName as product_fileName
    FROM easybuy_order_detail as detail
    JOIN easybuy_product as product
    ON detail.productId = product.id
    where orderId = #{orderId}
  </select>
</mapper>