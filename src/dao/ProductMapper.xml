<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ProductMapper">
  <resultMap id="BaseResultMap" type="pojo.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="categoryLevel1Id" jdbcType="INTEGER" property="categoryLevel1Id" />
    <result column="categoryLevel2Id" jdbcType="INTEGER" property="categoryLevel2Id" />
    <result column="categoryLevel3Id" jdbcType="INTEGER" property="categoryLevel3Id" />
    <result column="fileName" jdbcType="VARCHAR" property="fileName" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, price, stock, categoryLevel1Id, categoryLevel2Id, categoryLevel3Id, 
    fileName, isDelete, createTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from easybuy_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from easybuy_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pojo.Product">
    insert into easybuy_product (id, name, description, 
      price, stock, categoryLevel1Id, 
      categoryLevel2Id, categoryLevel3Id, fileName, 
      isDelete, createTime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{price,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, #{categoryLevel1Id,jdbcType=INTEGER},
      #{categoryLevel2Id,jdbcType=INTEGER}, #{categoryLevel3Id,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR},
      #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="pojo.Product">
    insert into easybuy_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="categoryLevel1Id != null">
        categoryLevel1Id,
      </if>
      <if test="categoryLevel2Id != null">
        categoryLevel2Id,
      </if>
      <if test="categoryLevel3Id != null">
        categoryLevel3Id,
      </if>
      <if test="fileName != null">
        fileName,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel1Id != null">
        #{categoryLevel1Id,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel2Id != null">
        #{categoryLevel2Id,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel3Id != null">
        #{categoryLevel3Id,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Product">
    update easybuy_product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel1Id != null">
        categoryLevel1Id = #{categoryLevel1Id,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel2Id != null">
        categoryLevel2Id = #{categoryLevel2Id,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel3Id != null">
        categoryLevel3Id = #{categoryLevel3Id,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        fileName = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Product">
    update easybuy_product
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      categoryLevel1Id = #{categoryLevel1Id,jdbcType=INTEGER},
      categoryLevel2Id = #{categoryLevel2Id,jdbcType=INTEGER},
      categoryLevel3Id = #{categoryLevel3Id,jdbcType=INTEGER},
      fileName = #{fileName,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--  商品数-->
  <select id="count" resultType="Integer">
    select count(1) from easybuy_product
  </select>
<!--  查看商品列表-->
  <select id="productList" resultType="product">
    select * from easybuy_product
    <where>
      <if test="isDelete != null">isDelete=#{isDelete}</if>
    </where>
    limit #{pageBean.pageNo},#{pageBean.pageSize}
  </select>
<!--  3级id看有没有商品-->
  <select id="selectLv3" resultType="product">
    select * from easybuy_product where categoryLevel3Id = #{categoryLevel3Id,jdbcType=INTEGER}
  </select>

  <!-- 根据三级分类id查找商品 -->
  <select id="selectByThreeId" parameterType="Integer" resultType="product">
    SELECT * FROM easybuy_product where categoryLevel3Id=#{id}
  </select>

  <!-- 根据三级id查询对应条数 -->
  <select id="selectByTypeCount" parameterType="Map" resultType="Integer">
    SELECT count(1) FROM easybuy_product where categoryLevel3Id=#{id}
  </select>

  <!-- 根据条件进行分类查询 -->
  <select id="selectByType" parameterType="Map" resultType="product">
    SELECT * FROM easybuy_product where categoryLevel3Id=#{id}
    <if test="type != null and type == 1">
      order by price
    </if>
    <if test="type != null and type == 2">
      order by price desc
    </if>
    <if test="type != null and type == 3">
      order by createTime desc
    </if>
    limit #{start},#{size}
  </select>

  <!-- 根据二级分类id和三级分类id查询数量 -->
  <select id="selectByPidAndId" resultType="Integer">
    SELECT COUNT(1) FROM easybuy_product WHERE categoryLevel2Id=#{pid} AND categoryLevel3Id=#{id}
  </select>

  <!-- 根据库存数量查找热门款 -->
  <select id="selectByStock" resultType="product">
    SELECT * FROM easybuy_product ORDER BY stock LIMIT 12
  </select>

  <!-- 根据价格查找最热卖商品 -->
  <select id="selectByPrice" resultType="product">
    SELECT * FROM easybuy_product ORDER BY price LIMIT 6
  </select>

  <!-- 根据一级id查询商品 -->
  <select id="selectByCategoryLevel1Id" resultType="product">
    SELECT * FROM easybuy_product WHERE `categoryLevel1Id` = #{id}
    <if test="type != null and type == 1">
      order by price
    </if>
    <if test="type != null and type == 2">
      order by price desc
    </if>
    <if test="type != null and type == 3">
      order by createTime desc
    </if>
    limit #{start},#{size}
  </select>

  <!-- 根据一级id查询商品数量 -->
  <select id="selectByCategoryLevel1IdCount" parameterType="Map" resultType="Integer">
    SELECT COUNT(1) FROM easybuy_product WHERE categoryLevel1Id = #{id}
  </select>

  <!-- 根据名字查询数量 -->
  <select id="selectByNameCount" parameterType="Map" resultType="Integer">
    SELECT count(1) FROM easybuy_product WHERE `name` LIKE concat ('%',#{name},'%')
  </select>

  <!-- 根据名字模糊查询商品 -->
  <select id="selectByName" parameterType="String" resultType="product">
    SELECT * FROM easybuy_product WHERE `name` LIKE concat ('%',#{name},'%')
    <if test="type != null and type == 1">
      order by price
    </if>
    <if test="type != null and type == 2">
      order by price desc
    </if>
    <if test="type != null and type == 3">
      order by createTime desc
    </if>
    limit #{start},#{size}
  </select>

</mapper>